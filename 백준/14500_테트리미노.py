#반례주소
#https://www.acmicpc.net/board/view/61597
# tetris의 각모양(5가지)에 대해 모든배열을 순회(x,y)했을때 각 모양들에서 최대의 최댓값
##왼쪽위 꼭지점을 기준을 잡는다는 개념으로
# 한꼭지점에서 생길수있는 도형의 모형들을 shapes에 담고
# 그 (x,y)라는 한꼭지점에 대해 shaepes들을 돌며 Max값을 리턴해주는 함수를 만들고
# 입력 모든 x,y를 돌며 모든 모양에대한 합의 최댓값을 출력해준다.

n, m = map(int,input().split())
tetris = [list(map(int,input().split())) for _ in range(n)]
shapes = [
   [[1,1,1,1],
    [0,0,0,0],
    [0,0,0,0],
     [0,0,0,0]],

    [[1,0,0,0],
    [1,0,0,0],
    [1,0,0,0],
    [1,0,0,0]],

    [[1,1,0,0],
    [1,1,0,0],
    [0,0,0,0],
     [0,0,0,0]],

    [[1,0,0,0],
    [1,0,0,0],
    [1,1,0,0],
     [0,0,0,0]],

    [[1,1,1,0],
    [1,0,0,0],
    [0,0,0,0],
     [0,0,0,0]],

    [[1, 1, 0, 0],
     [0, 1, 0, 0],
     [0, 1, 0, 0],
     [0, 0, 0, 0]],

    [[0, 0, 1, 0],
     [1, 1, 1, 0],
     [0, 0, 0, 0],
     [0, 0, 0, 0]],

    [[0,1,1,0],
     [1,1,0,0],
     [0,0,0,0],
     [0,0,0,0]],

    [[1,0,0,0],
     [1,1,0,0],
     [0,1,0,0],
     [0,0,0,0]],


    [[1,1,1,0],
     [0,1,0,0],
     [0,0,0,0],
     [0,0,0,0]],

    [[0, 1, 0, 0],
     [1, 1, 0, 0],
     [0, 1, 0, 0],
     [0, 0, 0, 0]],

    [[0, 1, 0, 0],
     [1, 1, 1, 0],
     [0, 0, 0, 0],
     [0, 0, 0, 0]],

    [[1, 0, 0, 0],
     [1, 1, 0, 0],
     [1, 0, 0, 0],
     [0, 0, 0, 0]],
                        #대칭
    [[0, 1, 0, 0],
     [1, 1, 0, 0],
     [1, 0, 0, 0],
     [0, 0, 0, 0]],

    [[1, 1, 0, 0],
     [0, 1, 1, 0],
     [0, 0, 0, 0],
     [0, 0, 0, 0]],

    [[0, 1, 0, 0],
     [0, 1, 0, 0],
     [1, 1, 0, 0],
     [0, 0, 0, 0]],

    [[1, 1, 1, 0],
     [0, 0, 1, 0],
     [0, 0, 0, 0],
     [0, 0, 0, 0]],

    [[1, 1, 0, 0],
     [1, 0, 0, 0],
     [1, 0, 0, 0],
     [0, 0, 0, 0]],

    [[1, 0, 0, 0],
     [1, 1, 1, 0],
     [0, 0, 0, 0],
     [0, 0, 0, 0]]
 ]


def find_max(x,y):
    final_max = 0
    for i in range(len(shapes)):
        shapes_max = 0
        for dx in range(4):
            for dy in range(4):
                if shapes[i][dx][dy] == 0 :
                    continue
                if x+dx >= n or y+dy >= m :
                    break
                else :
                    shapes_max += tetris[x+dx][y+dy]
        final_max = max(shapes_max,final_max)
    return final_max
res = 0
for i in range(n):
    for j in range(m):
        res = max(find_max(i,j),res)

print(res)
